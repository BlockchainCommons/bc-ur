# @configure_input@

#
#  Makefile.in
#
#  Copyright Â© 2020 by Blockchain Commons, LLC
#  Licensed under the "BSD-2-Clause Plus Patent License"
#

# Package-specific substitution variables
package = @PACKAGE_NAME@
version = @PACKAGE_VERSION@
tarname = @PACKAGE_TARNAME@
libname = lib$(package).a

# Prefix-specific substitution variables
prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@

# VPATH-specific substitution variables
srcdir = @srcdir@
VPATH = @srcdir@

# Terminal colors
RED=`tput setaf 1`
GREEN=`tput setaf 2`
RESET=`tput sgr0`

COMPILER = g++
CFLAGS += --debug -O0

CC = @CXX@
ifeq (@CXX@, g++)
	CXXFLAGS += -std=c++17 --debug -O0
else
	CXXFLAGS += -std=c++17 -stdlib=libc++ --debug -O0
endif

UNAME := $(shell uname)

ifeq ($(UNAME), Linux)
    LDLIBS +=  -lm -lc++ -lc++abi -lgcc_s -lgcc
else ifeq ($(findstring MINGW64, $(UNAME)), MINGW64)
    # on windows building with msys2/mingw64
    LDLIBS +=  -lm -lc++ -lws2_32
else
    LDLIBS += -lstdc++
endif

.PHONY: all
all: test

TEST_OBJS = test.o test-utils.o

libdir = ../src
lib = $(libdir)/$(libname)

$(lib):
	cd $(libdir) && $(MAKE) $(libname)

test: $(lib) $(TEST_OBJS)

test.o: test-utils.hpp ../src/bc-ur.hpp
test-utils.o: test-utils.hpp ../src/bc-ur.hpp

.PHONY: check
check: test
	./test
	@echo "$(GREEN)*** ALL TESTS PASSED ***$(RESET)"

.PHONY: clean
clean:
	rm -f test $(TEST_OBJS)
	rm -rf *.dSYM

.PHONY: distclean
distclean: clean
	rm -f Makefile
